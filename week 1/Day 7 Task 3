//shortest unsorted continuous array

class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int low = 0, high = nums.size()-1;
        while (low < nums.size()-1 and nums[low] <= nums[low+1]) {
            low++;
        }
        if (low == nums.size()-1) {return 0;}
        while (high > 0 and nums[high] >= nums[high-1]) {
            high--;
        }
        int sub_min = INT_MAX, sub_max = INT_MIN;
        for (int i = low; i <= high; ++i) {
            sub_min = min(nums[i], sub_min);
            sub_max = max(nums[i], sub_max);
        }
        while (low > 0 and nums[low-1] > sub_min) {
            low--;
        }
        while (high < nums.size()-1 and nums[high+1] < sub_max) {
            high++;
        }
        return high-low+1;
    }
};
